{"version":3,"sources":["firebase.js","Registration.js","reportWebVitals.js","index.js","images/logo.png"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","getAnalytics","getStorage","database","getDatabase","mailformat","Registration","_ref","theme","createTheme","palette","secondary","main","primary","warning","error","info","_useState","useState","_useState2","Object","slicedToArray","firstName","setFirstName","_useState3","_useState4","firstNameCheck","setFirstNameCheck","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","lastNameCheck","setLastNameCheck","_useState9","_useState10","email","setEmail","_useState11","_useState12","emailCheck","setEmailCheck","_useState13","_useState14","skills","setSkills","_useState15","_useState16","skillsCheck","setSkillsCheck","_useState17","_useState18","major","setMajor","_useState19","_useState20","majorCheck","setMajorCheck","_useState21","_useState22","learn","setLearn","_useState23","_useState24","learnCheck","setLearnCheck","_useState25","_useState26","gender","setGender","_useState27","_useState28","genderCheck","setGenderCheck","_useState29","_useState30","isValidEmail","setIsValidEmail","_useState31","_useState32","dietaryRestriction","setDietaryRestriction","_useState33","_useState34","otherDietaryRestriction","setOtherDietaryRestriction","_useState35","_useState36","otherDietaryRestrictionCheck","setOtherDietaryRestrictionCheck","_useState37","_useState38","selectYear","setSelectYear","_useState39","_useState40","otherSelectYear","setOtherSelectYear","_useState41","_useState42","otherSelectYearCheck","setOtherSelectYearCheck","_useState43","_useState44","selectSchool","setSelectedSchool","_useState45","_useState46","resumeName","setResumeName","_useState47","_useState48","uploadResume","setUploadResume","_useState49","_useState50","isResumePicked","setIsResumePicked","_useState51","_useState52","progress","setProgress","_useState53","_useState54","successRegistration","setSuccessRegistration","selectRestrictions","event","includes","target","value","current","filter","diet","concat","toConsumableArray","_handleSubmit","asyncToGenerator","_regeneratorRuntime","mark","_callee","dietRestriction","url","applicant","newPostKey","updates","_applicant","_newPostKey","_updates","wrap","_context","prev","next","push","getDownloadURL","snapshot","ref","sent","schoolYear","uvaSchool","resume","registeredAt","firebase","firestore","Timestamp","now","toDate","toString","length","child","key","abrupt","update","then","catch","console","warn","stop","apply","this","arguments","react_default","a","createElement","Fragment","ThemeProvider","reactjs_popup_esm","open","modal","Box","sx","borderRadius","textAlign","padding","display","flexFlow","gap","Typography","Link","href","Button","backgroundColor","color","boxShadow","&:hover","transform","border","borderColor","type","Grid","container","spacing","direction","alignItems","justifyContent","style","minHeight","minWidth","width","marginLeft","marginRight","Card","margin","defineProperty","breakpoints","down","maxWidth","src","Logo","objectFit","TextField","fullWidth","required","id","name","label","variant","size","autoComplete","onChange","e","replace","helperText","fontSize","onBlur","test","FormGroup","InputLabel","RadioGroup","FormControlLabel","hidden","control","Radio","FormHelperText","FormControl","Select","labelId","MenuItem","marginTop","component","accept","storageReference","storageRef","files","uploadResumeToDB","uploadBytesResumable","on","bytesTransferred","totalBytes","changeResumeHandle","LinearProgress","boxSizing","multiline","maxRows","Infinity","Checkbox","onClick","handleSubmit","trigger","position","align","Date","getFullYear","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Registration","route","module","exports","p"],"mappings":"2PAwBMA,EAAMC,YAbW,CACnBC,OAAQ,0CACRC,WAAY,6CACZC,YAAa,iEACbC,UAAW,6BACXC,cAAe,yCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAONC,GADKC,YAAaX,GACRY,YAAWZ,IACrBa,EAAWC,YAAYd,y+MCepC,IAAMe,EAAa,gDA2pBJC,EAzpBM,WAAM,IAAAC,EAGjBC,EAAQC,YAAY,CACtBC,QAAS,CACLC,UAAW,CACPC,KAAM,WAEVC,QAAS,CACLD,KAAM,WAEVE,QAAS,CACLF,KAAM,WAEVG,MAAO,CACHH,KAAM,WAEVI,KAAM,CACFJ,KAAM,cAlBKK,EAwBWC,mBAAS,IAxBpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAwBhBK,EAxBgBH,EAAA,GAwBLI,EAxBKJ,EAAA,GAAAK,EAyBqBN,oBAAS,GAzB9BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAyBhBE,EAzBgBD,EAAA,GAyBAE,EAzBAF,EAAA,GAAAG,EA0BSV,mBAAS,IA1BlBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GA0BhBE,EA1BgBD,EAAA,GA0BNE,EA1BMF,EAAA,GAAAG,EA2BmBd,oBAAS,GA3B5Be,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GA2BhBE,EA3BgBD,EAAA,GA2BDE,EA3BCF,EAAA,GAAAG,EA4BGlB,mBAAS,IA5BZmB,GAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GA4BhBE,GA5BgBD,GAAA,GA4BTE,GA5BSF,GAAA,GAAAG,GA6BatB,oBAAS,GA7BtBuB,GAAArB,OAAAC,EAAA,EAAAD,CAAAoB,GAAA,GA6BhBE,GA7BgBD,GAAA,GA6BJE,GA7BIF,GAAA,GAAAG,GA8BK1B,mBAAS,IA9Bd2B,GAAAzB,OAAAC,EAAA,EAAAD,CAAAwB,GAAA,GA8BhBE,GA9BgBD,GAAA,GA8BRE,GA9BQF,GAAA,GAAAG,GA+Be9B,oBAAS,GA/BxB+B,GAAA7B,OAAAC,EAAA,EAAAD,CAAA4B,GAAA,GA+BhBE,GA/BgBD,GAAA,GA+BHE,GA/BGF,GAAA,GAAAG,GAgCGlC,mBAAS,IAhCZmC,GAAAjC,OAAAC,EAAA,EAAAD,CAAAgC,GAAA,GAgChBE,GAhCgBD,GAAA,GAgCTE,GAhCSF,GAAA,GAAAG,GAiCatC,oBAAS,GAjCtBuC,GAAArC,OAAAC,EAAA,EAAAD,CAAAoC,GAAA,GAiChBE,GAjCgBD,GAAA,GAiCJE,GAjCIF,GAAA,GAAAG,GAkCG1C,mBAAS,IAlCZ2C,GAAAzC,OAAAC,EAAA,EAAAD,CAAAwC,GAAA,GAkChBE,GAlCgBD,GAAA,GAkCTE,GAlCSF,GAAA,GAAAG,GAmCa9C,oBAAS,GAnCtB+C,GAAA7C,OAAAC,EAAA,EAAAD,CAAA4C,GAAA,GAmChBE,GAnCgBD,GAAA,GAmCJE,GAnCIF,GAAA,GAAAG,GAsCKlD,mBAAS,MAtCdmD,GAAAjD,OAAAC,EAAA,EAAAD,CAAAgD,GAAA,GAsChBE,GAtCgBD,GAAA,GAsCRE,GAtCQF,GAAA,GAAAG,GAuCetD,oBAAS,GAvCxBuD,GAAArD,OAAAC,EAAA,EAAAD,CAAAoD,GAAA,GAuChBE,GAvCgBD,GAAA,GAuCHE,GAvCGF,GAAA,GAAAG,GA0CiB1D,oBAAS,GA1C1B2D,GAAAzD,OAAAC,EAAA,EAAAD,CAAAwD,GAAA,GA0ChBE,GA1CgBD,GAAA,GA0CFE,GA1CEF,GAAA,GAAAG,GA6C6B9D,mBAAS,IA7CtC+D,GAAA7D,OAAAC,EAAA,EAAAD,CAAA4D,GAAA,GA6ChBE,GA7CgBD,GAAA,GA6CIE,GA7CJF,GAAA,GAAAG,GA8CuClE,mBAAS,IA9ChDmE,GAAAjE,OAAAC,EAAA,EAAAD,CAAAgE,GAAA,GA8ChBE,GA9CgBD,GAAA,GA8CSE,GA9CTF,GAAA,GAAAG,GA+CiDtE,oBAAS,GA/C1DuE,GAAArE,OAAAC,EAAA,EAAAD,CAAAoE,GAAA,GA+ChBE,GA/CgBD,GAAA,GA+CcE,GA/CdF,GAAA,GAAAG,GAkDa1E,mBAAS,MAlDtB2E,GAAAzE,OAAAC,EAAA,EAAAD,CAAAwE,GAAA,GAkDhBE,GAlDgBD,GAAA,GAkDJE,GAlDIF,GAAA,GAAAG,GAmDuB9E,mBAAS,IAnDhC+E,GAAA7E,OAAAC,EAAA,EAAAD,CAAA4E,GAAA,GAmDhBE,GAnDgBD,GAAA,GAmDCE,GAnDDF,GAAA,GAAAG,GAoDiClF,mBAAS,IApD1CmF,GAAAjF,OAAAC,EAAA,EAAAD,CAAAgF,GAAA,GAoDhBE,GApDgBD,GAAA,GAoDME,GApDNF,GAAA,GAAAG,GAuDmBtF,mBAAS,WAvD5BuF,GAAArF,OAAAC,EAAA,EAAAD,CAAAoF,GAAA,GAuDhBE,GAvDgBD,GAAA,GAuDFE,GAvDEF,GAAA,GAAAG,GA0Da1F,qBA1Db2F,GAAAzF,OAAAC,EAAA,EAAAD,CAAAwF,GAAA,GA0DhBE,GA1DgBD,GAAA,GA0DJE,GA1DIF,GAAA,GAAAG,GA2DiB9F,qBA3DjB+F,GAAA7F,OAAAC,EAAA,EAAAD,CAAA4F,GAAA,GA2DhBE,GA3DgBD,GAAA,GA2DFE,GA3DEF,GAAA,GAAAG,GA4DqBlG,oBAAS,GA5D9BmG,GAAAjG,OAAAC,EAAA,EAAAD,CAAAgG,GAAA,GA4DhBE,GA5DgBD,GAAA,GA4DAE,GA5DAF,GAAA,GAAAG,GA6DStG,mBAAS,GA7DlBuG,GAAArG,OAAAC,EAAA,EAAAD,CAAAoG,GAAA,GA6DhBE,GA7DgBD,GAAA,GA6DNE,GA7DMF,GAAA,GAAAG,GAgE+B1G,oBAAS,GAhExC2G,GAAAzG,OAAAC,EAAA,EAAAD,CAAAwG,GAAA,GAgEhBE,GAhEgBD,GAAA,GAgEKE,GAhELF,GAAA,GAiFjBG,GAAqB,SAACC,GAGpB/C,GAAmBgD,SAASD,EAAME,OAAOC,OACzCjD,GAAsB,SAAAkD,GAAO,OAAIA,EAAQC,OAAO,SAAAC,GAAI,OAAIA,IAASN,EAAME,OAAOC,UAG9EjD,GAAsB,SAAAkD,GAAO,SAAAG,OAAApH,OAAAqH,EAAA,EAAArH,CAAQiH,GAAR,CAAiBJ,EAAME,OAAOC,WAxF5C,SAAAM,KAAA,OAAAA,GAAAtH,OAAAuH,EAAA,EAAAvH,CAAAwH,IAAAC,KA6FvB,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAV,IAAAW,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAIQX,EAAkB7D,GACU,KAA5BI,IACAyD,EAAgBY,KAAKrE,IAKR,MAAboC,KAAoBJ,GAX5B,CAAAkC,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAe0BE,YAAe1C,GAAa2C,SAASC,KAf/D,cAecd,EAfdQ,EAAAO,KAiBYd,EAAY,CACZ3H,UAAWA,EACXQ,SAAUA,EACVQ,MAAOA,GACP0H,WAA2B,IAAflE,GAAmBI,GAAkBJ,GACjDmE,UAAWvD,GACXwD,OAAQlB,EACRlG,OAAQA,GACRwB,OAAQA,GACRR,MAAOA,GACPR,MAAOA,GACP6G,aAAcC,IAASC,UAAUC,UAAUC,MAAMC,SAASC,WAC1DvF,mBAA+C,IAA3B6D,EAAgB2B,OAAe,OAAS3B,GAG1DG,EAAaS,YAAKgB,YAAMb,YAAI3J,GAAW,UAAUyK,KACjDzB,EAAU,IACR,IAAMD,GAAcD,EAlCpCO,EAAAqB,OAAA,SAmCeC,YAAOhB,YAAI3J,GAAWgJ,GAAS4B,KAAK,kBAAMhD,IAAuB,KAAOiD,MAAM,SAACjK,GAAYkK,QAAQC,KAAKnK,MAnCvH,eAuCYkI,EAAY,CACZ3H,UAAWA,EACXQ,SAAUA,EACVQ,MAAOA,GACP0H,WAA2B,IAAflE,GAAmBI,GAAkBJ,GACjDmE,UAAWvD,GACXwD,OAAQ,OACRpH,OAAQA,GACRwB,OAAQA,GACRR,MAAOA,GACPR,MAAOA,GACP6G,aAAcC,IAASC,UAAUC,UAAUC,MAAMC,SAASC,WAC1DvF,mBAA+C,IAA3B6D,EAAgB2B,OAAe,OAAS3B,GAG1DG,EAAaS,YAAKgB,YAAMb,YAAI3J,GAAW,UAAUyK,KACjDzB,EAAU,IACR,IAAMD,GAAcD,EAxDpCO,EAAAqB,OAAA,SAyDeC,YAAOhB,YAAI3J,GAAWgJ,GAAS4B,KAAK,kBAAMhD,IAAuB,KAAOiD,MAAM,SAACjK,GAAYkK,QAAQC,KAAKnK,MAzDvH,yBAAAyI,EAAA2B,SAAArC,OA7FuBsC,MAAAC,KAAAC,WAuKvB,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAenL,MAAOA,GAElB+K,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,KAAM/D,GACNgE,OAAK,GAELP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,GAAI,CACAC,aAAc,MACdC,UAAW,SACXC,QAAS,OACTC,QAAS,OACTC,SAAU,SACVC,IAAK,QAGTf,EAAAC,EAAAC,cAACc,EAAA,EAAD,mDACAhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,KAAK,gCACPlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACIV,GAAI,CACAW,gBAAiB,UACjBC,MAAO,OACPC,UAAW,EACXC,UAAW,CACPC,UAAW,yBACXJ,gBAAiB,OACjBC,MAAO,UACPI,OAAQ,YACRC,YAAa,YAGrBC,KAAK,UAbT,oBAoBZ3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACIC,WAAS,EACTC,QAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SACfC,MAAO,CAAEC,UAAW,QAASC,SAAU,UAEvCpC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,GAAI,CACA4B,MAAO,OACPJ,eAAgB,SAChBD,WAAY,SACZM,WAAY,OACZC,YAAa,OACb1B,QAAS,SAGbb,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACI/B,IAAEzL,EAAA,CACEsM,UAAW,EACXT,QAAS,OACTC,SAAU,gBACV2B,OAAQ,OACRJ,MAAO,QACPL,WAAY,SACZZ,gBAAiB,OACjBR,QAAS,YACTG,IAAK,OACLU,OAAQ,QAVV5L,OAAA6M,EAAA,EAAA7M,CAAAb,EAAA,YAWa,QAXba,OAAA6M,EAAA,EAAA7M,CAAAb,EAYGC,EAAM0N,YAAYC,KAAK,MAAQ,CAC5BH,OAAQ,MAbdzN,IAmBFgL,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACIC,KAAK,+BACLT,GAAE5K,OAAA6M,EAAA,EAAA7M,CAAA,CAEEgN,SAAU,SACT5N,EAAM0N,YAAYC,KAAK,MAAQ,CAC5BC,SAAU,WAKlB7C,EAAAC,EAAAC,cAAA,OACI4C,IAAKC,IACLb,MAAKrM,OAAA6M,EAAA,EAAA7M,CAAA,CACD6K,aAAc,MACd2B,MAAO,QACPW,UAAW,SACV/N,EAAM0N,YAAYC,KAAK,MAAQ,CAC5BP,MAAO,aAQvBrC,EAAAC,EAAAC,cAACc,EAAA,EAAD,kuBAIAhB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,GAAI,CACA4B,MAAO,OACPxB,QAAS,OACTC,SAAU,aACVmB,eAAgB,SAChBlB,IAAK,QAGTf,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,WAAW,EACXC,UAAQ,EACRC,GAAG,aACHC,KAAK,aACLC,MAAM,aACNC,QAAQ,WACR1G,MAAO9G,EACP4L,KAAK,OACL6B,KAAK,QACLC,aAAa,aACbC,SAAU,SAACC,GAAQ3N,EAAa2N,EAAE/G,OAAOC,MAAM+G,QAAQ,WAAY,KAAMxN,EAAgC,KAAdL,IAC3F8N,WAA0B,KAAd9N,GAAoBiK,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYP,GAAI,CAAEY,MAAO,UAAWyC,SAAU,SAA9C,2BAEpC9D,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,WAAW,EACXC,UAAQ,EACRC,GAAG,YACHC,KAAK,YACLE,QAAQ,WACRD,MAAM,YACNE,KAAK,QACL3G,MAAOtG,EACPoL,KAAK,OACL8B,aAAa,YACbC,SAAU,SAACC,GAAQnN,EAAYmN,EAAE/G,OAAOC,MAAM+G,QAAQ,WAAY,KAAMhN,EAA8B,KAAbL,IACzFsN,WAAyB,KAAbtN,GAAmByJ,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYP,GAAI,CAAEY,MAAO,UAAWyC,SAAU,SAA9C,2BAGvC9D,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,WAAW,EACXC,UAAQ,EACRC,GAAG,QACHE,MAAM,gBACND,KAAK,QACLE,QAAQ,WACRC,KAAK,QACL3G,MAAO9F,GACP4K,KAAK,QACL8B,aAAa,QACbM,OAAQ,kBAAMvK,GAAgB1E,EAAWkP,KAAKjN,MAC9CvB,OAAQ+D,GACRmK,SAAU,SAACC,GAAQ3M,GAAS2M,EAAE/G,OAAOC,OAAQzF,GAAwB,KAAVL,KAC3D8M,WAAuB,KAAV9M,IAAgBiJ,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYP,GAAI,CAAEY,MAAO,UAAWyC,SAAU,SAA9C,sBACvBvK,IAAgByG,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYP,GAAI,CAAEY,MAAO,UAAWyC,SAAU,SAA9C,0BAG1B9D,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,WAAW,EACXC,UAAQ,EACRC,GAAG,QACHE,MAAM,uBACND,KAAK,QACLE,QAAQ,WACR1G,MAAO9E,GACPyL,KAAK,QACL7B,KAAK,OACL8B,aAAa,QACbC,SAAU,SAACC,GAAQ3L,GAAS2L,EAAE/G,OAAOC,OAAQzE,GAAiC,KAAnBuL,EAAE/G,OAAOC,QACpEgH,WAAsB,KAAV9L,IAAgBiI,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYP,GAAI,CAAEY,MAAO,UAAWyC,SAAU,SAA9C,sBAEhC9D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,GAAI,CACA4B,MAAO,OACPxB,QAAS,OACTC,SAAU,SACVC,IAAK,QAGTf,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACIjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAYd,GAAG,UAAf,UACApD,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACId,KAAK,gBACLK,SAAU,SAACC,GAAQ3K,GAAU2K,EAAE/G,OAAOC,OAAQzD,GAAkC,OAAnBuK,EAAE/G,OAAOC,SAItEmD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAkBC,QAAQ,EAAMC,QAAStE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,MAAWjB,MAAM,OAAOzG,MAAM,SACvEmD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAkBC,QAAQ,EAAMC,QAAStE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,MAAWjB,MAAM,SAASzG,MAAM,WACzEmD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAkBC,QAAQ,EAAMC,QAAStE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,MAAWjB,MAAM,QAAQzG,MAAM,UACxEmD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAkBC,QAAQ,EAAMC,QAAStE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,MAAWjB,MAAM,oBAAoBzG,MAAM,uBAI7E,MAAV9D,GACGiH,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAgB/D,GAAI,CAACY,MAAO,MAAOyC,SAAU,SAA7C,2BACA,OAKZ9D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,GAAI,CACA4B,MAAO,OACPxB,QAAS,OACTC,SAAU,gBACVC,IAAK,QAGTf,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAajB,KAAK,SACdxD,EAAAC,EAAAC,cAACgE,EAAA,EAAD,iCACAlE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACIC,QAAQ,qBACRrB,MAAM,2BACNzG,MAAOtC,GACPiJ,KAAK,QACLE,SAAU,SAACC,GAAD,OAAOnJ,GAAcmJ,EAAE/G,OAAOC,SAExCmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,MAAjB,QACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,MAAjB,QACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,MAAjB,QACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,MAAjB,QACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,GAAjB,UAGY,IAAftC,GACGyF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIG,GAAG,aACHE,MAAM,iCACND,KAAK,aACLE,QAAQ,WACRC,KAAK,QACL7B,KAAK,OACL8B,aAAa,aACb5G,MAAOlC,GACP8F,GAAI,CAAEoE,UAAW,OACjBnB,SAAU,SAACC,GAAQ/I,GAAmB+I,EAAE/G,OAAOC,MAAM+G,QAAQ,MAAO,KAAM5I,GAA2C,KAAnB2I,EAAE/G,OAAOC,QAC3GgH,WAAgC,KAApBlJ,IAA0BqF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYP,GAAI,CAAEY,MAAO,UAAWyC,SAAU,SAA9C,0CAG9C,OAGZ9D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,GAAI,CACA4B,MAAO,OACPxB,QAAS,OACTC,SAAU,gBACVC,IAAK,QAGTf,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAajB,KAAK,SACdxD,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAYd,GAAG,iBAAf,iCACApD,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACIC,QAAQ,gBACRrB,MAAM,gCACNzG,MAAO1B,GACPqI,KAAK,QACLE,SAAU,SAACC,GAAD,OAAOvI,GAAkBuI,EAAE/G,OAAOC,SAE5CmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,WAAjB,+BACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,eAAjB,6CACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,YAAjB,+BACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,gBAAjB,0BACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,QAAjB,yBACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,YAAjB,sBACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,OAAjB,iBACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,YAAjB,6BACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,aAAjB,6CACAmD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAU/H,MAAO,gBAAjB,kDAKZmD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,GAAI,CACA4B,MAAO,OACPxB,QAAS,OACTC,SAAU,gBACVC,IAAK,QAGTf,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACIoC,QAAQ,YACRuB,UAAU,QACVrE,GAAI,CACAW,gBAAiB,UACjBC,MAAO,OACPE,UAAW,CACPH,gBAAiB,OACjBC,MAAO,UACPI,OAAQ,YACRC,YAAa,aAIpBvF,GAAW,IAAM,2BAA6BZ,GAC/CyE,EAAAC,EAAAC,cAAA,SACIyB,KAAK,OACL6B,KAAK,QACLa,QAAQ,EACRU,OAAO,sCACPrB,SAAU,SAACC,GAAD,OA3ZnB,SAACjH,GACxB,IAAMsI,EAAmBC,YAAWxQ,EAAD,oBAAAwI,OAA8B1C,GAA9B,KAAA0C,OAA4CP,EAAME,OAAOsI,MAAM,GAAG7B,OAC/F8B,EAAmBC,YAAqBJ,EAAkBtI,EAAME,OAAOsI,MAAM,IAEnFC,EAAiBE,GAAG,gBAAiB,SAAC/G,GAClClC,GAAakC,EAASgH,iBAAmBhH,EAASiH,WAAc,KAChE3J,GAAgBuJ,KAGpB3J,GAAckB,EAAME,OAAOsI,MAAM,GAAG7B,MACpCrH,IAAkB,GAiZ+BwJ,CAAmB7B,OAG5C3D,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAgBlC,QAAQ,cAAc1G,MAAOV,MAEjD6D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,GAAI,CACA4B,MAAO,OACPxB,QAAS,OACTC,SAAU,SACVC,IAAK,MACL2E,UAAW,eAGf1F,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYoC,GAAG,UAAf,qJAIApD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIE,UAAQ,EACRC,GAAG,SACHC,KAAK,SACLE,QAAQ,WACRC,KAAK,QACLmC,WAAS,EACTC,QAASC,IACThJ,MAAOtF,GACPkM,aAAa,SACbC,SAAU,SAACC,GAAQnM,GAAUmM,EAAE/G,OAAOC,OAAQjF,GAAkC,KAAnB+L,EAAE/G,OAAOC,QACtEgH,WAAuB,KAAXtM,IAAiByI,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYP,GAAI,CAAEY,MAAO,UAAWyC,SAAU,SAA9C,+BAGrC9D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,GAAI,CACA4B,MAAO,OACPxB,QAAS,OACTC,SAAU,SACVC,IAAK,MACL2E,UAAW,eAGf1F,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYoC,GAAG,SAAf,8DAGApD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIE,UAAQ,EACRC,GAAG,QACHC,KAAK,QACLE,QAAQ,WACRC,KAAK,QACLmC,WAAS,EACTC,QAASC,IACThJ,MAAOtE,GACPkL,aAAa,QACbC,SAAU,SAACC,GAAQnL,GAASmL,EAAE/G,OAAOC,OAAQjE,GAAiC,KAAnB+K,EAAE/G,OAAOC,QACpEgH,WAAsB,KAAVtL,IAAgByH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYP,GAAI,CAAEY,MAAO,UAAWyC,SAAU,SAA9C,qDAGpC9D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,GAAI,CACA4B,MAAO,OACPxB,QAAS,OACTC,SAAU,SACVC,IAAK,QAGTf,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KAEIjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAYd,GAAG,uBAAf,wBAEApD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAkBC,QAAQ,EAAMC,QAAStE,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUpC,SAAUjH,KAAwB6G,MAAM,aAAazG,MAAM,eAC9GmD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAkBC,QAAQ,EAAMC,QAAStE,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUpC,SAAUjH,KAAwB6G,MAAM,cAAczG,MAAM,gBAC/GmD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAkBC,QAAQ,EAAMC,QAAStE,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUpC,SAAUjH,KAAwB6G,MAAM,QAAQzG,MAAM,UACzGmD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAkBC,QAAQ,EAAMC,QAAStE,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUpC,SAAUjH,KAAwB6G,MAAM,QAAQzG,MAAM,UACxGlD,GAAmBgD,SAAS,SACzBqD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAYd,GAAG,yBAAf,qCACApD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIG,GAAG,wBACHC,KAAK,wBACLE,QAAQ,WACRC,KAAK,QACL7B,KAAK,OACL9E,MAAO9C,GACP0J,aAAa,wBACbC,SAAU,SAACC,GAAQ3J,GAA2B2J,EAAE/G,OAAOC,OAAQzC,GAAmD,KAAnBuJ,EAAE/G,OAAOC,QACxGgH,YAAa1J,IAAgC6F,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYP,GAAI,CAAEY,MAAO,UAAWyC,SAAU,SAA9C,qCAGrD,OAIZ9D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,GAAI,CACAI,QAAS,OACTC,SAAU,aACVC,IAAK,SAGR5K,GAAkBQ,GAAiB4C,IAChCpC,IAAcgB,IAAcR,IAAewB,IAC3CR,KAA8B,IAAf4B,IAAmBQ,OACjCpB,GAAmBgD,SAAS,UAAWxC,IACxC6F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACIV,GAAI,CACAW,gBAAiB,UACjBC,MAAO,OACPC,UAAW,EACXC,UAAW,CACPC,UAAW,yBACXJ,gBAAiB,OACjBC,MAAO,UACPI,OAAQ,YACRC,YAAa,YAGrBC,KAAK,SACLoE,QAAS,kBAnlBtB,kBAAA5I,GAAA0C,MAAAC,KAAAC,WAmlB4BiG,KAdnB,uBAmBAhG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACI4F,QACIjG,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACIV,GAAI,CACAW,gBAAiB,UACjBC,MAAO,OACPC,UAAW,EACXC,UAAW,CACPC,UAAW,yBACXJ,gBAAiB,OACjBC,MAAO,UACPI,OAAQ,YACRC,YAAa,YAGrBC,KAAK,UAbT,uBAkBJ0D,GAAG,QACHa,SAAS,cAETlG,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,GAAI,CACAG,QAAS,MACTD,UAAW,SACXE,QAAS,OACTC,SAAU,kBAGdd,EAAAC,EAAAC,cAACc,EAAA,EAAD,gDAKZhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,KAAK,gCACPlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACIV,GAAI,CACAW,gBAAiB,OACjBC,MAAO,UACPI,OAAQ,YACRC,YAAa,UACbJ,UAAW,EACXC,UAAW,CACPC,UAAW,yBACXJ,gBAAiB,UACjBC,MAAO,SAGfM,KAAK,UAbT,cAqBhB3B,EAAAC,EAAAC,cAvfhB,WACI,OACIF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAYuC,QAAQ,QAAQlC,MAAM,iBAAiB8E,MAAM,SAAS1F,GAAI,CAAEoE,UAAW,SAC9E,kBACD7E,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMI,MAAM,UAAUH,KAAK,gCAA3B,qBAEQ,KACP,IAAIkF,MAAOC,gBAgfR,UClrBLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA9C,EAAA,GAAAnE,KAAAiH,EAAAC,KAAA,WAAqBlH,KAAK,SAAAxK,GAAiD,IAA9C2R,EAA8C3R,EAA9C2R,OAAQC,EAAsC5R,EAAtC4R,OAAQC,EAA8B7R,EAA9B6R,OAAQC,EAAsB9R,EAAtB8R,OAAQC,EAAc/R,EAAd+R,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCFDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpH,EAAAC,EAAAC,cAACF,EAAAC,EAAMoH,WAAP,KACErH,EAAAC,EAAAC,cAACoH,EAAD,CAAcC,OAAK,MAOvBjB,wBCfAkB,EAAAC,QAAiBhB,EAAAiB,EAAuB","file":"static/js/main.0b651c38.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getDatabase } from \"firebase/database\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAFHTfN6KuOwzDsLdWtmZeFAVpVcI-Npfw\",\r\n    authDomain: \"ideathon-registration-form.firebaseapp.com\",\r\n    databaseURL: \"https://ideathon-registration-form-default-rtdb.firebaseio.com\",\r\n    projectId: \"ideathon-registration-form\",\r\n    storageBucket: \"ideathon-registration-form.appspot.com\",\r\n    messagingSenderId: \"1094596378197\",\r\n    appId: \"1:1094596378197:web:81887879503a76e09c5edc\",\r\n    measurementId: \"G-JSB5Q51DBG\"\r\n};\r\n\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nexport const storage = getStorage(app);\r\nexport const database = getDatabase(app);","import React, { isValidElement, useState } from 'react';\r\n\r\n// firebase \r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport { database, storage } from './firebase';\r\nimport { ref, push, child, update } from \"firebase/database\";\r\nimport { uploadBytesResumable, getDownloadURL } from 'firebase/storage';\r\nimport { ref as storageRef } from 'firebase/storage'; // avoid naming issues\r\n\r\n// react pop up\r\nimport { Popup } from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\n// import mui styling\r\nimport {\r\n    Box,\r\n    Card,\r\n    Typography,\r\n    InputLabel,\r\n    TextField,\r\n    Select,\r\n    MenuItem,\r\n    LinearProgress,\r\n    Button,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    FormControl,\r\n    Grid,\r\n    Link,\r\n    RadioGroup,\r\n    Radio,\r\n    FormHelperText\r\n} from '@mui/material';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\n\r\n// import logo\r\nimport Logo from \"./images/logo.png\";\r\nimport { maxWidth } from '@mui/system';\r\n\r\n// email format \r\nconst mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\nconst Registration = () => {\r\n\r\n    // theme\r\n    const theme = createTheme({\r\n        palette: {\r\n            secondary: {\r\n                main: '#f82249'\r\n            },\r\n            primary: {\r\n                main: '#ff9daf'\r\n            },\r\n            warning: {\r\n                main: '#f82249'\r\n            },\r\n            error: {\r\n                main: '#f82249'\r\n            },\r\n            info: {\r\n                main: '#f82249'\r\n            }\r\n        }\r\n    });\r\n\r\n    // text-fields\r\n    const [firstName, setFirstName] = useState('');\r\n    const [firstNameCheck, setFirstNameCheck] = useState(false);\r\n    const [lastName, setLastName] = useState('');\r\n    const [lastNameCheck, setLastNameCheck] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [emailCheck, setEmailCheck] = useState(false);\r\n    const [skills, setSkills] = useState('');\r\n    const [skillsCheck, setSkillsCheck] = useState(false);\r\n    const [major, setMajor] = useState('');\r\n    const [majorCheck, setMajorCheck] = useState(false);\r\n    const [learn, setLearn] = useState('');\r\n    const [learnCheck, setLearnCheck] = useState(false);\r\n\r\n    // gender\r\n    const [gender, setGender] = useState(null);\r\n    const [genderCheck, setGenderCheck] = useState(false);\r\n\r\n    // email check\r\n    const [isValidEmail, setIsValidEmail] = useState(true);\r\n\r\n    // dietary restrictions\r\n    const [dietaryRestriction, setDietaryRestriction] = useState([]);\r\n    const [otherDietaryRestriction, setOtherDietaryRestriction] = useState('');\r\n    const [otherDietaryRestrictionCheck, setOtherDietaryRestrictionCheck] = useState(false);\r\n\r\n    // year\r\n    const [selectYear, setSelectYear] = useState(2023);\r\n    const [otherSelectYear, setOtherSelectYear] = useState('');\r\n    const [otherSelectYearCheck, setOtherSelectYearCheck] = useState('');\r\n\r\n    // school\r\n    const [selectSchool, setSelectedSchool] = useState('college');\r\n\r\n    // resume upload\r\n    const [resumeName, setResumeName] = useState();\r\n    const [uploadResume, setUploadResume] = useState();\r\n    const [isResumePicked, setIsResumePicked] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    // successful registration upload\r\n    const [successRegistration, setSuccessRegistration] = useState(false);\r\n\r\n    const changeResumeHandle = (event) => {\r\n        const storageReference = storageRef(storage, `/ideathon-resume/${selectYear}/${event.target.files[0].name}`);\r\n        const uploadResumeToDB = uploadBytesResumable(storageReference, event.target.files[0]);\r\n\r\n        uploadResumeToDB.on(\"state_changed\", (snapshot) => {\r\n            setProgress((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n            setUploadResume(uploadResumeToDB);\r\n        });\r\n\r\n        setResumeName(event.target.files[0].name);\r\n        setIsResumePicked(true);\r\n    };\r\n\r\n\r\n    // add multiple dietary restrictions\r\n    const selectRestrictions = (event) => {\r\n\r\n\r\n        if (dietaryRestriction.includes(event.target.value)) {\r\n            setDietaryRestriction(current => current.filter(diet => diet !== event.target.value))\r\n        }\r\n        else {\r\n            setDietaryRestriction(current => [...current, event.target.value]);\r\n        }\r\n\r\n    };\r\n\r\n    async function handleSubmit() {\r\n\r\n\r\n        // update dietary restrictions with other value\r\n        var dietRestriction = dietaryRestriction;\r\n        if (otherDietaryRestriction !== '') {\r\n            dietRestriction.push(otherDietaryRestriction);\r\n        }\r\n\r\n\r\n        // checks if resume has been uploaded yet or not\r\n        if (progress === 100 && isResumePicked) {\r\n\r\n\r\n            // download url\r\n            const url = await getDownloadURL(uploadResume.snapshot.ref);\r\n\r\n            let applicant = {\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                email: email,\r\n                schoolYear: selectYear === 0 ? otherSelectYear : selectYear,\r\n                uvaSchool: selectSchool,\r\n                resume: url,\r\n                skills: skills,\r\n                gender: gender,\r\n                learn: learn,\r\n                major: major,\r\n                registeredAt: firebase.firestore.Timestamp.now().toDate().toString(),\r\n                dietaryRestriction: dietRestriction.length === 0 ? \"none\" : dietRestriction,\r\n            };\r\n\r\n            const newPostKey = push(child(ref(database), 'posts')).key;\r\n            const updates = {};\r\n            updates['/' + newPostKey] = applicant;\r\n            return update(ref(database), updates).then(() => setSuccessRegistration(true)).catch((error) => { console.warn(error) });\r\n        } else { // for when no resume is selected\r\n\r\n\r\n            let applicant = {\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                email: email,\r\n                schoolYear: selectYear === 0 ? otherSelectYear : selectYear,\r\n                uvaSchool: selectSchool,\r\n                resume: \"none\",\r\n                skills: skills,\r\n                gender: gender,\r\n                learn: learn,\r\n                major: major,\r\n                registeredAt: firebase.firestore.Timestamp.now().toDate().toString(),\r\n                dietaryRestriction: dietRestriction.length === 0 ? \"none\" : dietRestriction,\r\n            };\r\n\r\n            const newPostKey = push(child(ref(database), 'posts')).key;\r\n            const updates = {};\r\n            updates['/' + newPostKey] = applicant;\r\n            return update(ref(database), updates).then(() => setSuccessRegistration(true)).catch((error) => { console.warn(error) });\r\n        }\r\n    }\r\n\r\n\r\n    function Copyright() {\r\n        return (\r\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ marginTop: \"10px\" }}>\r\n                {'Copyright © '}\r\n                <Link color=\"inherit\" href=\"https://ideathon.hoohacks.io\">\r\n                    Hoohacks Ideathon\r\n                </Link>{' '}\r\n                {new Date().getFullYear()}\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={theme}>\r\n\r\n                <Popup\r\n                    open={successRegistration}\r\n                    modal\r\n                >\r\n                    <Box\r\n                        sx={{\r\n                            borderRadius: \"5px\",\r\n                            textAlign: \"center\",\r\n                            padding: \"15px\",\r\n                            display: \"flex\",\r\n                            flexFlow: \"column\",\r\n                            gap: \"8px\",\r\n                        }}\r\n                    >\r\n                        <Typography>Successfully signed up for Ideathon 22-23!</Typography>\r\n                        <Link href='https://ideathon.hoohacks.io'>\r\n                            <Button\r\n                                sx={{\r\n                                    backgroundColor: \"#f82249\",\r\n                                    color: \"#fff\",\r\n                                    boxShadow: 2,\r\n                                    \"&:hover\": {\r\n                                        transform: \"scale3d(1.05, 1.05, 1)\",\r\n                                        backgroundColor: \"#fff\",\r\n                                        color: \"#f82249\",\r\n                                        border: \"1px solid\",\r\n                                        borderColor: \"#f82249\",\r\n                                    }\r\n                                }}\r\n                                type=\"button\"\r\n                            >\r\n                                View Schedule\r\n                            </Button>\r\n                        </Link>\r\n                    </Box>\r\n                </Popup>\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    style={{ minHeight: '100vh', minWidth: '100wh' }}\r\n                >\r\n                    <Box\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            marginLeft: \"auto\",\r\n                            marginRight: \"auto\",\r\n                            display: \"flex\",\r\n                        }}\r\n                    >\r\n                        <Card\r\n                            sx={{\r\n                                boxShadow: 4,\r\n                                display: \"flex\",\r\n                                flexFlow: \"column nowrap\",\r\n                                margin: \"24px\",\r\n                                width: \"582px\",\r\n                                alignItems: \"center\",\r\n                                backgroundColor: \"#fff\",\r\n                                padding: \"22px 22px\",\r\n                                gap: \"16px\",\r\n                                border: \"none\",\r\n                                boxShadow: \"none\",\r\n                                [theme.breakpoints.down('md')]: {\r\n                                    margin: \"0\",\r\n                                }\r\n                            }}\r\n                        >\r\n\r\n                            {/* IDEATHON LOGO */}\r\n                            <Link \r\n                                href=\"https://ideathon.hoohacks.io\"\r\n                                sx={{\r\n\r\n                                    maxWidth: \"582px\",\r\n                                    [theme.breakpoints.down('md')]: {\r\n                                        maxWidth: \"402px\",\r\n                                        \r\n                                    }\r\n                                }} \r\n                            >\r\n                                <img\r\n                                    src={Logo}\r\n                                    style={{\r\n                                        borderRadius: \"5px\",\r\n                                        width: \"582px\",\r\n                                        objectFit: \"cover\",\r\n                                        [theme.breakpoints.down('md')]: {\r\n                                            width: \"402px\",\r\n                                        }\r\n                                    }}\r\n\r\n                                />\r\n                            </Link>\r\n\r\n\r\n                            <Typography >\r\n                                The fourth annual Ideathon is a networking, team-building, and pitching event designed to help students with technical experience and students with business experience build their technical business ideas.  Student teams can meet 1:1 with industry experts about their ideas and form long lasting relationships with them as they continue to grow their ideas. Corporate sponsors will be holding workshops to teach students about pitching their ideas, valuing their potential businesses, and building technical prototypes. There will be a two hour pitch event, where teams will pitch to a board of sponsors for funding. Teams will have the opportunity to win thousands of dollars in funding in order to bring their idea to fruition!\r\n                            </Typography>\r\n\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"row nowrap\",\r\n                                    justifyContent: \"center\",\r\n                                    gap: \"8px\"\r\n                                }}\r\n                            >\r\n                                <TextField\r\n                                    fullWidth={true}\r\n                                    required\r\n                                    id=\"first-name\"\r\n                                    name=\"first-name\"\r\n                                    label=\"First Name\"\r\n                                    variant=\"outlined\"\r\n                                    value={firstName}\r\n                                    type=\"text\"\r\n                                    size=\"large\"\r\n                                    autoComplete=\"first-name\"\r\n                                    onChange={(e) => { setFirstName(e.target.value.replace(/[^a-z]/gi, '')); setFirstNameCheck(firstName !== '') }}\r\n                                    helperText={firstName === '' && <Typography sx={{ color: \"#f82249\", fontSize: \"11px\" }}>Enter your first name</Typography>}\r\n                                />\r\n                                <TextField\r\n                                    fullWidth={true}\r\n                                    required\r\n                                    id=\"last-name\"\r\n                                    name=\"last-name\"\r\n                                    variant=\"outlined\"\r\n                                    label=\"Last Name\"\r\n                                    size=\"large\"\r\n                                    value={lastName}\r\n                                    type=\"text\"\r\n                                    autoComplete=\"last-name\"\r\n                                    onChange={(e) => { setLastName(e.target.value.replace(/[^a-z]/gi, '')); setLastNameCheck(lastName !== '') }}\r\n                                    helperText={lastName === '' && <Typography sx={{ color: \"#f82249\", fontSize: \"11px\" }}>Enter your last name</Typography>}\r\n                                />\r\n                            </Box>\r\n                            <TextField\r\n                                fullWidth={true}\r\n                                required\r\n                                id=\"Email\"\r\n                                label=\"Email Address\"\r\n                                name=\"Email\"\r\n                                variant=\"outlined\"\r\n                                size=\"large\"\r\n                                value={email}\r\n                                type=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onBlur={() => setIsValidEmail(mailformat.test(email))}\r\n                                error={!isValidEmail}\r\n                                onChange={(e) => { setEmail(e.target.value); setEmailCheck(email !== '') }}\r\n                                helperText={(email === '' && <Typography sx={{ color: \"#f82249\", fontSize: \"11px\" }}>Enter your email</Typography>) ||\r\n                                    (!isValidEmail && <Typography sx={{ color: \"#f82249\", fontSize: \"11px\" }}>Invalid Email Format</Typography>)\r\n                                }\r\n                            />\r\n                            <TextField\r\n                                fullWidth={true}\r\n                                required\r\n                                id=\"major\"\r\n                                label=\"Major/Intended Major\"\r\n                                name=\"major\"\r\n                                variant=\"outlined\"\r\n                                value={major}\r\n                                size=\"large\"\r\n                                type=\"text\"\r\n                                autoComplete=\"major\"\r\n                                onChange={(e) => { setMajor(e.target.value); setMajorCheck(e.target.value !== '') }}\r\n                                helperText={major === '' && <Typography sx={{ color: \"#f82249\", fontSize: \"11px\" }}>Enter your major</Typography>}\r\n                            />\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column\",\r\n                                    gap: \"4px\",\r\n                                }}\r\n                            >\r\n                                <FormGroup>\r\n                                    <InputLabel id=\"gender\">Gender</InputLabel>\r\n                                    <RadioGroup\r\n                                        name=\"gender-select\"\r\n                                        onChange={(e) => { setGender(e.target.value); setGenderCheck(e.target.value !== null) }}\r\n                                    >\r\n\r\n\r\n                                        <FormControlLabel hidden={true} control={<Radio />} label=\"Male\" value=\"male\" />\r\n                                        <FormControlLabel hidden={true} control={<Radio />} label=\"Female\" value=\"female\" />\r\n                                        <FormControlLabel hidden={true} control={<Radio />} label=\"Other\" value=\"other\" />\r\n                                        <FormControlLabel hidden={true} control={<Radio />} label=\"Prefer not to say\" value=\"prefer-not-to-say\" />\r\n\r\n                                    </RadioGroup>\r\n                                    \r\n                                    {gender == null ? (\r\n                                        <FormHelperText sx={{color: \"red\", fontSize: \"11px\",}}>Please select an option</FormHelperText>\r\n                                    ) : null}\r\n                                </FormGroup>\r\n\r\n\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column nowrap\",\r\n                                    gap: \"8px\"\r\n                                }}\r\n                            >\r\n                                <FormControl size=\"small\">\r\n                                    <InputLabel>Expected Graduation Date</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"school-year-select\"\r\n                                        label=\"Expected Graduation Year\"\r\n                                        value={selectYear}\r\n                                        size=\"large\"\r\n                                        onChange={(e) => setSelectYear(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={2023}>2023</MenuItem>\r\n                                        <MenuItem value={2024}>2024</MenuItem>\r\n                                        <MenuItem value={2025}>2025</MenuItem>\r\n                                        <MenuItem value={2026}>2026</MenuItem>\r\n                                        <MenuItem value={0}>Other</MenuItem>\r\n\r\n                                    </Select>\r\n                                    {selectYear === 0 ? (\r\n                                        <>\r\n                                            <TextField\r\n                                                id=\"other-year\"\r\n                                                label=\"Other Expected Graduation Year\"\r\n                                                name=\"other-year\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"large\"\r\n                                                type=\"text\"\r\n                                                autoComplete=\"selectYear\"\r\n                                                value={otherSelectYear}\r\n                                                sx={{ marginTop: \"8px\" }}\r\n                                                onChange={(e) => { setOtherSelectYear(e.target.value.replace(/\\D/g, '')); setOtherSelectYearCheck(e.target.value !== '') }}\r\n                                                helperText={otherSelectYear === '' && <Typography sx={{ color: \"#f82249\", fontSize: \"11px\" }}>Enter your expected graduation year</Typography>}\r\n                                            />\r\n                                        </>\r\n                                    ) : null}\r\n                                </FormControl>\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column nowrap\",\r\n                                    gap: \"4px\"\r\n                                }}\r\n                            >\r\n                                <FormControl size=\"small\">\r\n                                    <InputLabel id=\"school-select\">University of Virginia School</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"school-select\"\r\n                                        label=\"University of Virginia School\"\r\n                                        value={selectSchool}\r\n                                        size=\"large\"\r\n                                        onChange={(e) => setSelectedSchool(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={\"college\"}>College of Arts and Science</MenuItem>\r\n                                        <MenuItem value={\"engineering\"}>School of Engineering and Applied Science</MenuItem>\r\n                                        <MenuItem value={\"commerce\"}>McIntire School of Commerce</MenuItem>\r\n                                        <MenuItem value={\"architecture\"}>School of Architecture</MenuItem>\r\n                                        <MenuItem value={\"wise\"}>UVA's College at Wise</MenuItem>\r\n                                        <MenuItem value={\"medicine\"}>School of Medicine</MenuItem>\r\n                                        <MenuItem value={\"law\"}>School of Law</MenuItem>\r\n                                        <MenuItem value={\"business\"}>Darden School of Business</MenuItem>\r\n                                        <MenuItem value={\"education\"}>School of Education and Human Development</MenuItem>\r\n                                        <MenuItem value={\"professional\"}>School of Continuing & Professional Studies</MenuItem>\r\n\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column nowrap\",\r\n                                    gap: \"4px\"\r\n                                }}\r\n                            >\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    component=\"label\"\r\n                                    sx={{\r\n                                        backgroundColor: \"#f82249\",\r\n                                        color: \"#fff\",\r\n                                        \"&:hover\": {\r\n                                            backgroundColor: \"#fff\",\r\n                                            color: \"#f82249\",\r\n                                            border: \"1px solid\",\r\n                                            borderColor: \"#f82249\",\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {progress < 100 ? \"Optional - Upload Resume\" : resumeName}\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        size=\"large\"\r\n                                        hidden={true}\r\n                                        accept=\"application/msword, application/pdf\"\r\n                                        onChange={(e) => changeResumeHandle(e)}\r\n                                    />\r\n                                </Button>\r\n                                <LinearProgress variant=\"determinate\" value={progress} />\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column\",\r\n                                    gap: \"8px\",\r\n                                    boxSizing: \"border-box\",\r\n                                }}\r\n                            >\r\n                                <Typography id=\"skills\">\r\n                                    What are some skills that you possess that you think would be helpful\r\n                                    for Ideathon participants? This will be used primarily for team building. *\r\n                                </Typography>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"skills\"\r\n                                    name=\"skills\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"large\"\r\n                                    multiline\r\n                                    maxRows={Infinity}\r\n                                    value={skills}\r\n                                    autoComplete=\"skills\"\r\n                                    onChange={(e) => { setSkills(e.target.value); setSkillsCheck(e.target.value !== '') }}\r\n                                    helperText={skills === '' && <Typography sx={{ color: \"#f82249\", fontSize: \"11px\" }}>Enter your skills or N/A</Typography>}\r\n                                />\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column\",\r\n                                    gap: \"8px\",\r\n                                    boxSizing: \"border-box\",\r\n                                }}\r\n                            >\r\n                                <Typography id=\"learn\">\r\n                                    What would you like to learn or get out of the Ideathon? *\r\n                                </Typography>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"learn\"\r\n                                    name=\"learn\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"large\"\r\n                                    multiline\r\n                                    maxRows={Infinity}\r\n                                    value={learn}\r\n                                    autoComplete=\"learn\"\r\n                                    onChange={(e) => { setLearn(e.target.value); setLearnCheck(e.target.value !== '') }}\r\n                                    helperText={learn === '' && <Typography sx={{ color: \"#f82249\", fontSize: \"11px\" }}>Enter something you would like to learn or N/A</Typography>}\r\n                                />\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"column\",\r\n                                    gap: \"8px\"\r\n                                }}\r\n                            >\r\n                                <FormGroup\r\n                                >\r\n                                    <InputLabel id=\"dietary-restriction\">Dietary Restrictions</InputLabel>\r\n\r\n                                    <FormControlLabel hidden={true} control={<Checkbox onChange={selectRestrictions} />} label=\"Vegetarian\" value=\"vegetarian\" />\r\n                                    <FormControlLabel hidden={true} control={<Checkbox onChange={selectRestrictions} />} label=\"Gluten Free\" value=\"gluten-free\" />\r\n                                    <FormControlLabel hidden={true} control={<Checkbox onChange={selectRestrictions} />} label=\"Vegan\" value=\"vegan\" />\r\n                                    <FormControlLabel hidden={true} control={<Checkbox onChange={selectRestrictions} />} label=\"Other\" value=\"other\" />\r\n                                    {dietaryRestriction.includes(\"other\") ? (\r\n                                        <>\r\n                                            <InputLabel id=\"dietary-specify-other\">Specify Other Dietary Restriction</InputLabel>\r\n                                            <TextField\r\n                                                id=\"dietary-specify-other\"\r\n                                                name=\"dietary-specify-other\"\r\n                                                variant=\"outlined\"\r\n                                                size=\"large\"\r\n                                                type=\"text\"\r\n                                                value={otherDietaryRestriction}\r\n                                                autoComplete=\"dietary-specify-other\"\r\n                                                onChange={(e) => { setOtherDietaryRestriction(e.target.value); setOtherDietaryRestrictionCheck(e.target.value !== '') }}\r\n                                                helperText={!otherDietaryRestrictionCheck && <Typography sx={{ color: \"#f82249\", fontSize: \"11px\" }}>Enter Your Dietary Restriction</Typography>}\r\n                                            />\r\n                                        </>\r\n                                    ) : null}\r\n\r\n                                </FormGroup>\r\n                            </Box>\r\n                            <Box\r\n                                sx={{\r\n                                    display: \"flex\",\r\n                                    flexFlow: \"row nowrap\",\r\n                                    gap: \"16px\",\r\n                                }}\r\n                            >\r\n                                {firstNameCheck && lastNameCheck && isValidEmail &&\r\n                                    emailCheck && majorCheck && skillsCheck && genderCheck &&\r\n                                    learnCheck && (selectYear === 0 ? otherSelectYearCheck : true) &&\r\n                                    (dietaryRestriction.includes(\"other\") ? otherDietaryRestrictionCheck : true) ? (\r\n                                    <Button\r\n                                        sx={{\r\n                                            backgroundColor: \"#f82249\",\r\n                                            color: \"#fff\",\r\n                                            boxShadow: 2,\r\n                                            \"&:hover\": {\r\n                                                transform: \"scale3d(1.05, 1.05, 1)\",\r\n                                                backgroundColor: \"#fff\",\r\n                                                color: \"#f82249\",\r\n                                                border: \"1px solid\",\r\n                                                borderColor: \"#f82249\",\r\n                                            }\r\n                                        }}\r\n                                        type=\"submit\"\r\n                                        onClick={() => handleSubmit()}\r\n                                    >\r\n                                        Submit Registration\r\n                                    </Button>\r\n                                ) : (\r\n                                    <Popup\r\n                                        trigger={\r\n                                            <Button\r\n                                                sx={{\r\n                                                    backgroundColor: \"#f82249\",\r\n                                                    color: \"#fff\",\r\n                                                    boxShadow: 2,\r\n                                                    \"&:hover\": {\r\n                                                        transform: \"scale3d(1.05, 1.05, 1)\",\r\n                                                        backgroundColor: \"#fff\",\r\n                                                        color: \"#f82249\",\r\n                                                        border: \"1px solid\",\r\n                                                        borderColor: \"#f82249\",\r\n                                                    }\r\n                                                }}\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                Submit Registration\r\n                                            </Button>\r\n                                        }\r\n                                        on=\"hover\"\r\n                                        position=\"top center\"\r\n                                    >\r\n                                        <Box\r\n                                            sx={{\r\n                                                padding: \"5px\",\r\n                                                textAlign: \"center\",\r\n                                                display: \"flex\",\r\n                                                flexFlow: \"column nowrap\",\r\n                                            }}\r\n                                        >\r\n                                            <Typography>Please fill out the remaining fields.</Typography>\r\n                                        </Box>\r\n                                    </Popup>\r\n                                )}\r\n\r\n                                <Link href=\"https://ideathon.hoohacks.io\">\r\n                                    <Button\r\n                                        sx={{\r\n                                            backgroundColor: \"#fff\",\r\n                                            color: \"#f82249\",\r\n                                            border: \"1px solid\",\r\n                                            borderColor: \"#f82249\",\r\n                                            boxShadow: 2,\r\n                                            \"&:hover\": {\r\n                                                transform: \"scale3d(1.05, 1.05, 1)\",\r\n                                                backgroundColor: \"#f82249\",\r\n                                                color: \"#fff\",\r\n                                            }\r\n                                        }}\r\n                                        type=\"button\"\r\n                                    >\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Link>\r\n                            </Box>\r\n                        </Card>\r\n                    </Box>\r\n                    <Copyright />\r\n                </Grid>\r\n            </ThemeProvider>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Registration;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport Registration from './Registration';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Registration route />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.8887ae4c.png\";"],"sourceRoot":""}